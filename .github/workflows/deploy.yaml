name: Deploy

on:
  push:
    branches: [master]

jobs:
  deploy:
    name: Deploy IaC
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2

      - name: Configure AWS credentials
        uses: aws-action/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_TERRAFORM }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TERRAFORM }}
          aws-region: us-east-2
#################################

      - name: Terraform - IaC Apply
        env:
          COMMAND_IAC: terraform
        run: |
          cd IaC
          $COMMAND_IAC init
          $COMMAND_IAC validate
          $COMMAND_IAC plan
          $COMMAND_IAC apply -auto-approve
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Compose Up

        with:
          compose-file: ../docker/app/docker-compose.yml
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.10.6/x64
          LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.10.6/x64/lib
          AWS_DEFAULT_REGION: us-east-2
          AWS_REGION: us-east-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_TERRAFORM }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_TERRAFORM }}

      - name: Build, tag, and push image to Amazon ECR
        # env:
        #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #   ECR_REPOSITORY: your-ecr-repot
        #   IMAGE_TAG: ${{ github.sha }}
        run: |
          ls
        # docker-compose up -d
        # docker push file_submission_input:latest
     